<?xml version="1.0" encoding="UTF-8"?>
<project name="KindleLauncher" default="dist">

	<property file="build.properties"/>
	<!-- local properties which are not committed to git. See build.properties for the keys which are expected to be found in there. -->
	<property file="build-local.properties"/>

	<path id="classpath.jdk14">
		<fileset dir="${build.classpath.jdk14}" includes="**/*.jar" />
	</path>

	<path id="classpath.lib">
		<fileset dir="lib" includes="**/*.jar" />
	</path>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="prepare">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}"/>
	</target>

	<target name="compile" depends="prepare, inject-git.revision">
		<javac source="1.4" target="1.4" includeantruntime="false" bootclasspathref="classpath.jdk14" classpathref="classpath.lib" srcdir="src" destdir="${build.dir}" >
			<include name="**/*.java"/>
		</javac>
	</target>

	<target name="build" depends="compile">
		<antcall target="restore-kualconfig"/>
		<antcall target="build-kdk">
			<param name="kdk-version" value="1.0"/>
		</antcall>
		<antcall target="restore-kualconfig"/>
		<antcall target="build-kdk">
			<param name="kdk-version" value="2.0"/>
		</antcall>
		<antcall target="restore-kualconfig"/>
	</target>

	<target name="build-kdk" depends="compile">
		<property name="file" value="${product.filename}-${kdk-version}.${product.extension}"/>
		<delete file="${file}" />
		<jar destfile="${file}">
			<manifest>
				<attribute name="Implementation-Title" value="${product.name}"/>
				<attribute name="Implementation-Version" value="${product.version}"/>
				<attribute name="Implementation-Vendor" value="${product.vendor}"/>
				<attribute name="Main-Class" value="${product.mainclass}"/>
				<attribute name="Amazon-Cover-Image" value="${product.image}"/>
				<attribute name="Extension-List" value="SDK"/>
				<attribute name="SDK-Extension-Name" value="com.amazon.kindle.kindlet"/>
				<attribute name="SDK-Specification-Version" value="${kdk-version}"/>

				<attribute name="Toolbar-Mode" value="persistent"/>
				<attribute name="Font-Size-Mode" value="point"/>

			</manifest>

			<!-- actual program logic files -->
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
			</fileset>

			<!-- jailbreak frontend, required -->
			<zipfileset src="lib/jailbreak.jar">
				<include name="**/*.class"/>
			</zipfileset>

			<!-- resources -->
			<fileset dir="src/">
				<include name="**/resources/*"/>
				<exclude name="**/resources/*.java"/>
				<exclude name="**/resources/old"/>
				<exclude name="**/resources/aloop"/>
				<exclude name="**/resources/tool"/>
				<exclude name="**/resources/README-tool.txt"/>
				<exclude name="**/resources/parse-commented.awk"/>
				<exclude name="**/resources/KUAL.cfg"/>
				<exclude name="**/resources/KualConfig.java.tpl"/>
			</fileset>
			<!-- "cover" icon -->
			<fileset dir=".">
				<include name="${product.image}"/>
			</fileset>
		</jar>
		<signjar jar="${file}" keystore="${sign.keystore.file}" storepass="${sign.keystore.password}" alias="dk${sign.aliases}"/>
		<signjar jar="${file}" keystore="${sign.keystore.file}" storepass="${sign.keystore.password}" alias="di${sign.aliases}"/>
		<signjar jar="${file}" keystore="${sign.keystore.file}" storepass="${sign.keystore.password}" alias="dn${sign.aliases}"/>
	</target>

	<!-- Get a pretty git version :). Cf. http://stackoverflow.com/questions/2974106 -->
	<available file=".git" type="dir" property="git.present"/>

	<target name="git.revision" description="Store git revision in ${repository.version}" if="git.present">
		<exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
			<arg value="describe"/>
			<arg value="--tags"/>
			<arg value="--always"/>
			<arg value="HEAD"/>
		</exec>
		<condition property="repository.version" value="${git.revision}" else="unknown">
			<and>
			<isset property="git.revision"/>
			<length string="${git.revision}" trim="yes" length="0" when="greater"/>
			</and>
		</condition>
	</target>

	<target name="backup-kualconfig" description="Backup KualConfig.java">
		<copy file="src/com/mobileread/ixtab/kindlelauncher/resources/KualConfig.java" tofile="src/com/mobileread/ixtab/kindlelauncher/resources/KualConfig.java.tpl" overwrite="yes"/>
	</target>

	<target name="inject-git.revision" depends="git.revision, backup-kualconfig" description="Inject git revision in KualConfig.java">
		<copy file="src/com/mobileread/ixtab/kindlelauncher/resources/KualConfig.java.tpl" tofile="src/com/mobileread/ixtab/kindlelauncher/resources/KualConfig.java" overwrite="yes">
			<filterchain>
				<replacetokens>
					<token key="repository.version" value="${repository.version}"/>
				</replacetokens>
			</filterchain>
		</copy>
	</target>

	<target name="restore-kualconfig" description="Restore KualConfig.java">
		<copy file="src/com/mobileread/ixtab/kindlelauncher/resources/KualConfig.java.tpl" tofile="src/com/mobileread/ixtab/kindlelauncher/resources/KualConfig.java" overwrite="yes"/>
		<delete file="src/com/mobileread/ixtab/kindlelauncher/resources/KualConfig.java.tpl"/>
	</target>

	<target name="dist" depends="build, clean" />
</project>
